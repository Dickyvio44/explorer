<div class="row">
  <div class="col-lg-12 mb-4">
    <div class="card">
      <div class="card-header">Correlation of Mortality Rate from the day from the first death </div>
      <div class="card-body">
        <div id="bubbles_days"><%= t('loading') %></div>
      </div>
    </div>
  </div>
</div>


<script type="module">

    var bubbles_days_query = new widgets.query(`
    query($from: ISO8601DateTime, $till: ISO8601DateTime) {
      offchain {
       covid {
          facts(<%= render partial: 'covid/covid_continent/continent_filter' %> date: {since: $from, till: $till}, options: {asc: "date.date"} ){

        date {
          date
        }

        country {
          name
          continent
        }

        confirmed
        recovered
        deaths
       }
      }
     }

    }`);

    new widgets.chart('#bubbles_days', bubbles_days_query, 'offchain.covid.facts', {
        chartType: 'BubbleChart',
        renderData: function(data){
            let new_data = [];
            let bubbles_days_data = {};
            let bubbles_days_data_process_item = function(item){
                if (!bubbles_days_data[item.country.name]){
                    bubbles_days_data[item.country.name] = {};
                }
                var data = bubbles_days_data[item.country.name];

                if (data.last_processed == item.date.date){
                    return data;
                }
                data.last_processed = item.date.date;

                if( item.deaths>0 && !data.first_death ){
                    data.first_death = new Date(item.date.date);
                }

                data.confirmed_cumulative = item.confirmed + (data.confirmed_cumulative || 0);
                data.deaths_cumulative = item.deaths + (data.deaths_cumulative || 0);

                return data;
            };
            let renderDaysFirstDeath = function(item){
                var data = bubbles_days_data_process_item(item);
                if (data.first_death){
                    return ((new Date(item.date.date).getTime()) - data.first_death) / (1000 * 3600 * 24) + 1;
                }else{
                    return 0;
                }
            };
            let renderMortailityRate = function(item){
                var data = bubbles_days_data_process_item(item);

                if (data.confirmed_cumulative && data.confirmed_cumulative>0 && data.deaths_cumulative>9){
                    return (data.deaths_cumulative / data.confirmed_cumulative);
                }else{
                    return 0;
                }
            };


            widgets.lodash.each(data, function(item){
                new_data.push(widgets.lodash.merge(item, {
                    render_days: renderDaysFirstDeath(item),
                    render_mortaility: renderMortailityRate(item)
                }));
            });
            return new_data;
        },
        chartOptions: {
            hAxis: {title: 'Days from the first death in country'},
            height: 800,
            vAxes: {
                '0': {
                    title: 'Deaths / Confirmed Cumulative',
                    format: 'percent'
                }
            },
            sizeAxis: {minSize: 2,  maxSize: 30},
            bubble: {
                textStyle: {
                    color: 'white',
                    fontSize: 10
                }
            },
            title: "Graph shows the cumulative mortality rate ( total number of deaths / total number of confirmed cases) versus the day from the first death." +
                "Shown country data with 10 or more death cases.",
            titleTextStyle: {
                color: 'lightblue'
            }

        },
        dataOptions: [
            {
                title: 'Country',
                path: 'country.name'
            },
            {
                title: 'Days from the first death',
                path: 'render_days'
            },
            {
                title: 'Death / Confirmed, Cumulative',
                path: 'render_mortaility'
            },
            {
                title: 'Country',
                path: 'country.name'
            },
            {
                title: 'Death Cases in this day',
                path: 'deaths'
            }
        ]
    });

    bubbles_days_query.request({from: <%= @from.html_safe %>, till: <%= @till.html_safe %>});

    rr.change(function(start, end, clear){
        bubbles_days_data = {};
        bubbles_days_query.request({from: start, till: end});
    })

</script>