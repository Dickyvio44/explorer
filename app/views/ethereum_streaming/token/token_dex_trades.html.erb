<div class='row'>
  <div class='col-12 col-lg-12 mb-4'>
    <div class='card'>
      <div id='Latest-Trades-of-Token-in-Network'></div>
    </div>
  </div>
</div>
<div class='row'>
  <div class='col-12 col-lg-12 mb-4'>
    <div class='card'>
      <div id='TokenPairs'></div>
    </div>
  </div>
</div>
<script>
    class LatestTradesOfTokenInNetwork extends BootstrapTableComponent {
        configuration() {
            return {
                topElement: function (response) {
                    return response.EVM.DEXTradeByTokens
                },
                chainId: function (response) {
                    return response.EVM.DEXTradeByTokens[0].ChainId
                },
                columns: [
                    {
                        name: 'Timestamp', cell: function (row) {
                            return row.Block.Time
                        }, rendering: renderDate,
                    },
                    {
                        name: 'Block', cell: function (row) {
                            return row.Block.Number
                        }, rendering: renderBlockLink
                    },
                    {
                        name: 'Seller', cell: function (row) {
                            return row.Trade.Seller
                        }, rendering: renderJustAddressLink
                    },
                    {
                        name: 'Sell amount', cell: function (row) {
                            return row.Trade.Amount
                        }, rendering: renderNumbers, headerStyle: {textAlign: 'end'},
                    },
                    {
                        name: 'Sell currency', cell: function (row) {
                            return {
                                currency: row.Trade.Currency.Symbol,
                                smartContract: row.Trade.Currency.SmartContract
                            }
                        }, rendering: renderTokenLink,
                    },
                    {
                        name: '', cell: function (row) {
                            return ''
                        }, rendering: renderSenderRecieverIcon, headerStyle: {width: '50px'},
                    },
                    {
                        name: 'Buyer', cell: function (row) {
                            return row.Trade.Buyer
                        }, rendering: renderJustAddressLink,
                    },
                    {
                        name: 'Buy amount', cell: function (row) {
                            return row.Trade.Side.Amount
                        }, rendering: renderNumbers, headerStyle: {textAlign: 'end'},
                    },
                    {
                        name: 'Buy currency', cell: function (row) {
                            return {
                                currency: row.Trade.Side.Currency.Symbol,
                                smartContract: row.Trade.Side.Currency.SmartContract
                            }
                        }, rendering: renderTokenLink,
                    },
                    {
                        name: 'Price', cell: function (row) {
                            return row.Trade.Price
                        }, rendering: renderNumbers, headerStyle: {textAlign: 'end'},
                    },
                    {
                        name: 'Transaction', cell: function (row) {
                            return row.Transaction.Hash
                        }, rendering: renderTX
                    }
                ]
            }
        }
    }

    class TokenPairs extends BootstrapTableComponent {
        configuration() {
            return {
                topElement: function (response) {
                    return response.EVM.DEXTradeByTokens
                },
                chainId: function (response) {
                    return response.EVM.DEXTradeByTokens[0].ChainId
                },
                columns: [
                    {
                        name: 'Pair', cell: function (row) {
                            return {
                                buyCurrencySymbol: row.Trade.Currency.Symbol,
                                buyCurrencySC: row.Trade.Currency.SmartContract,
                                sellCurrencySymbol: row.Trade.Side.Currency.Symbol,
                                sellCurrencySC: row.Trade.Side.Currency.SmartContract,
                            }
                        }, rendering: renderPairLink,
                    },
                    {
                        name: 'Name', cell: function (row) {
                            return row.Trade.Side.Currency.Name
                        },
                    },
                    {
                        name: 'Address', cell: function (row) {
                            return row.Trade.Side.Currency.SmartContract
                        }, rendering: renderJustAddressLink,
                    },
                    {
                        name: 'Count', cell: function (row) {
                            return row.count
                        }, rendering: renderNumbers, headerStyle: {textAlign: 'end'},
                    },
                ]
            }
        }
    }

    const variables = {
        network: '<%= @streaming%>',
        token: '<%= @address %>',
        limit: 10,
        offset: 0,
    }
    renderComponent(LatestTradesOfTokenInNetwork, '#Latest-Trades-of-Token-in-Network', 'Latest-Trades-of-Token-in-Network_1_1_1_1_1', variables, 'Latest-Trades-of-Token-in-Network-subscription');
    renderWithTime(variables, <%= limited_date_range_limit(@from, @till).join(',').html_safe %>, function f(variables) {
        renderComponent(TokenPairs, '#TokenPairs', 'Token-pairs_1_1_1', variables);
    })
</script>
