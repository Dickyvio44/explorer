<% if innovation_in_blockchain? %>
  <div class="row">
    <div class="col-12 col-lg-12 mb-4">
      <div class="card">
        <div id="Latest-Trades-of-Token-in-Network"></div>
      </div>
    </div>
  </div>
  <script>
      class LatestTradesOfTokenInNetwork extends BootstrapTableComponent {
          configuration() {
              return {
                  topElement: response => response.EVM.DEXTradeByTokens,
                  chainId: response=> response.EVM.DEXTradeByTokens[0]?.ChainId,
                  columns: [
                      {
                          name: 'Timestamp', cell: row=> row.Block.Time,
                          rendering: renderDate,
                      },
                      {
                          name: 'Block', cell: row=> row.Block.Number,
                          rendering: renderBlockLink
                      },
                      {
                          name: 'Seller', cell: row=> row.Trade.Seller,
                          rendering: renderJustAddressLink
                      },
                      {
                          name: 'Sell amount', cell: row=> row.Trade.Amount,
                          headerStyle: {textAlign: 'end'},
                      },
                      {
                          name: 'Sell currency', cell: row=> row.Trade.Currency.Symbol,
                      },
                      {
                          name: '', cell: ()=> '',rendering: renderSenderRecieverIcon, headerStyle: {width: '50px'},
                      },
                      {
                          name: 'Buyer', cell: row=> row.Trade.Buyer,
                          rendering: renderJustAddressLink
                      },
                      {
                          name: 'Buy amount',
                          cell: row=> row.Trade.Side.Amount,
                          headerStyle: {textAlign: 'end'},
                      },
                      {
                          name: 'Buy currency', cell: row=> row.Trade.Side.Currency.Symbol,
                      },
                      {
                          name: 'Price',
                          cell: row=> row.Trade.Price,
                          rendering: renderNumbers, headerStyle: {textAlign: 'end'},
                      },
                      {
                          name: 'Transaction', cell: row=> row.Transaction.Hash,
                          rendering: renderTX
                      }
                  ]
              }
          }
      }

      const variables = {
          network: '<%= @streaming%>',
          token: '<%= @token %>',
      }
      renderWithTime(variables, <%= limited_date_range_limit(@from, @till).join(',').html_safe %>, function f(variables) {
          renderComponent('<%=@streaming_access_token %>',[[LatestTradesOfTokenInNetwork, "#Latest-Trades-of-Token-in-Network"]], 'Latest-Trades-of-Token-in-Network', variables);
      })
  </script>
<% end %>
