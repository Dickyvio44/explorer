<div class="row">
  <div class="col-12 col-lg-12 mb-4">
    <div  id="latest-nft-id-transfers-table" class="card"></div>
  </div>
</div>
<div class="row">
  <div class="col-12 col-lg-12 mb-4">
    <div  id="latest-nft-transfers-table2" class="card"></div>
  </div>
</div>
<div class="row">
  <div class="col-12 col-lg-12 mb-4">
    <div id="latest-nft-transfers-table" class="card"></div>
  </div>
</div>
<script >
  class LatestNFTTransfersTable extends BootstrapVerticalTableComponent {
    configuration() {
      return  {
        topElement: function (response){ return response.EVM.BalanceUpdates},
        chainId: function (response){ return response.EVM.BalanceUpdates[0].ChainId},
        columns: [
          {
            name: 'Image', cell: function(row){ return row.BalanceUpdate.URI},rendering: renderImgFromURI,
          },
          {
            name: 'Name', cell: function(row){ return row.Currency.Name},
          },
          {
            name: 'Currency', cell: function(row){ return  {currency: row.Currency.Symbol, smartContract: row.Currency.SmartContract}},rendering: renderTokenLink,
          },
          {
            name: 'Id', cell: function(row){ return {id:row.BalanceUpdate.Id, address: row.Currency.SmartContract}},rendering: renderIdLink
          },
          {
            name: 'Last owner', cell: function(row){ return row.BalanceUpdate.Address}, rendering: renderAddressLink,
          },
          {
            name: 'Received in TX', cell: function(row){ return row.Transaction.Hash}, rendering: renderTX,
          },
        ]
      }
    }
  }
  class IdNFTTransfersTable2 extends GraphsComponent {
    configuration() {
      return  {
        topElement: function (response){ return response.EVM.Transfers},
        chainId: function (response){ return response.EVM.Transfers[0].ChainId},
        columns: [
          {
            name: 'Time', cell: function(row){ return row.Block.Time}, rendering: renderDate,
          },
          {
            name: 'Sender', cell: function(row){ return row.Transfer.Sender},
          },
          {
            name: 'Receiver', cell: function(row){ return row.Transfer.Receiver},
          },
          {
            name: 'TX Hash', cell: function(row){ return row.Transaction.Hash},
          },
        ]
      }
    }
  }
  class IdNFTTransfersTable extends BootstrapTableComponent {
    configuration() {
      return  {
        topElement: function (response){ return response.EVM.Transfers},
        chainId: function (response){ return response.EVM.Transfers[0].ChainId},
        columns: [
          {
            name: 'Time', cell: function(row){ return row.Block.Time}, rendering: renderDate,
          },
          {
            name: 'Block', cell: function(row){ return row.Block.Number}, rendering: renderBlockLink,
          },
          {
            name: 'Sender', cell: function(row){ return row.Transfer.Sender},  rendering: renderAddressLink,
          },
          {
            name: '', cell: function(row) { return '' }, rendering: renderSenderRecieverIcon
          },
          {
            name: 'Receiver', cell: function(row){ return row.Transfer.Receiver}, rendering: renderAddressLink,
          },
          {
            name: 'TX Hash', cell: function(row){ return row.Transaction.Hash}, rendering: renderTX,
          },
          {
            name:'Amount', cell: function(row){ return row.Transfer.Amount},
          }
        ]
      }
    }
  }

  const variables = {
    network:'<%= @streaming%>',
    // limit: 10,
    offset: 0,
    address: '<%= @address %>',
    token: '<%= @address %>',
    id: '<%= @id %>',
  }

  renderWithTime(variables,<%= limited_date_range_limit(@from, @till).join(',').html_safe %>, function f(variables){
    renderComponent(LatestNFTTransfersTable, "#latest-nft-id-transfers-table",'NFT-Token-Information-By-ID_1_1',variables);
    renderComponent(IdNFTTransfersTable2, "#latest-nft-transfers-table2",'NFT-Transfers-List-By-Id_1',variables);
    renderComponent(IdNFTTransfersTable, "#latest-nft-transfers-table",'NFT-Transfers-List-By-Id_1',variables);
  })
</script>
