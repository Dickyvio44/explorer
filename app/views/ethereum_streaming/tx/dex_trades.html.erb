<div class='row'>
  <div class='col-12 col-lg-12 mb-4'>
    <div class='card' id='TransactionAttributes'></div>
  </div>
</div>
<script>
    class TransactionAttributes extends BootstrapTableComponent {
        configuration() {
            return {
                topElement: function (response) {
                    return response.EVM.DEXTrades
                },
                chainId: function (response) {
                    return response.EVM.DEXTrades[0]?.ChainId
                },
                columns: [
                    {
                        name: 'Timestamp', cell: function (row) {
                            return row.Block.Time
                        }, rendering: renderDate,
                    },
                    {
                        name: 'Block', cell: function (row) {
                            return row.Block.Number
                        }, rendering: renderBlockLink
                    },
                    {
                        name: 'Sell amount', cell: function (row) {
                            return row.Trade.Sell.Amount
                        }, rendering: renderNumbers, headerStyle: {textAlign: 'end'},
                    },
                    {
                        name: 'Sell Currency', cell: function (row) {
                            return {
                                currency: row.Trade.Sell.Currency.Symbol,
                                smartContract: row.Trade.Sell.Currency.SmartContract
                            }
                        }, rendering: renderTokenLink,
                    },
                    {
                        name: '', cell: function (row) {
                            return ''
                        }, rendering: renderSenderRecieverIcon, headerStyle: {width: '50px'},
                    },
                    {
                        name: 'Buy amount', cell: function (row) {
                            return row.Trade.Buy.Amount
                        }, rendering: renderNumbers, headerStyle: {textAlign: 'end'},
                    },
                    {
                        name: 'Buy Currency', cell: function (row) {
                            return {
                                currency: row.Trade.Sell.Currency.Symbol,
                                smartContract: row.Trade.Sell.Currency.SmartContract
                            }
                        }, rendering: renderTokenLink,
                    },
                    {
                        name: 'Protocol', cell: function (row) {
                            return {
                                ProtocolFamily: row.Trade.Dex.ProtocolFamily,
                                ProtocolName: row.Trade.Dex.ProtocolName,
                                ProtocolVersion: row.Trade.Dex.ProtocolVersion
                            }
                        }, rendering: renderDexProtocolLink,
                    },
                    {
                        name: 'Smart Contract', cell: function (row) {
                            return row.Trade.Dex.SmartContract
                        }, rendering: renderAddressLink,
                    },
                ]
            }
        }
    }

    const variables = {
        network: '<%= @streaming%>',
        hash: '<%= @hash%>',
    }
    renderComponent(TransactionAttributes, '#TransactionAttributes', 'Token-Trades_1_1_1_1', variables);
</script>
