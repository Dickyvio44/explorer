<div class='row'>
  <div class='col-12 col-lg-12 mb-4'>
    <div id='IdNFTTransfersGraph' class='card'></div>
  </div>
</div>
<script>
    class TransfersByCurrencies extends BootstrapTableComponent {
        configuration() {
            return {
                topElement: function (response) {
                    return response.EVM.Transfers
                },
                chainId: function (response) {
                    return response.EVM.Transfers[0].ChainId
                },
                columns: [
                    {
                        name: 'Timestamp', cell: function (row) {
                            return row.Block.Time
                        }, rendering: renderDate,
                    },
                    {
                        name: 'Currency', cell: function (row) {
                            return {
                                currency: row.Transfer.Currency.Symbol,
                                smartContract: row.Transfer.Currency.SmartContract
                            }
                        }, rendering: renderTokenLink, headerStyle: {width: '15%'},
                    },
                    {
                        name: 'First transfer date', cell: function (row) {
                            return row.Block.first_date
                        },
                    },
                    {
                        name: 'Last transfer date', cell: function (row) {
                            return row.Block.last_date
                        },
                    },
                    {
                        name: 'Days token transferred', cell: function (row) {
                            return row.count_days
                        }, rendering: renderNumbers, headerStyle: {textAlign: 'end'},
                    },
                    {
                        name: 'Uniq Senders', cell: function (row) {
                            return row.senders
                        }, rendering: renderNumbers, headerStyle: {textAlign: 'end'},
                    },
                    {
                        name: 'Uniq Receivers', cell: function (row) {
                            return row.receivers
                        }, rendering: renderNumbers, headerStyle: {textAlign: 'end'},
                    },
                    {
                        name: 'Transferred Amount', cell: function (row) {
                            return row.sum_amount
                        }, rendering: renderNumbers, headerStyle: {textAlign: 'end'},
                    },
                    {
                        name: 'Transfer Count', cell: function (row) {
                            return row.count
                        }, rendering: renderNumbers, headerStyle: {textAlign: 'end'},
                    },
                ]
            }
        }
    }
    const variables = {
        interval: 15,
        network: '<%= @streaming%>',
        baseCurrency: '<%= @token1 %>',
        quoteCurrency: '<%= @token2 %>',
        from: from,
        till: till,
    }
    renderComponent(OHLCbyIntervalsGraph, '#OHLCbyIntervalsGraph', 'OHLC-by-intervalschange-interval-for-test_1', variables, 'Subscription-OHLC-with-interval');

</script>