<div class="row">
  <div class="col-12 col-lg-12 mb-4">
    <div class="card">
      <div class="card-header">
        <% if @token_info && @token_info.name && @token_info.symbol %>
          <%= t('widgets.headers.smart_contract_transactions_token', token_name: @token_info.name, token_symbol: @token_info.symbol) %>
        <% else %>
          <%= t('widgets.headers.smart_contract_transactions') %>
        <% end %>
      </div>
      <div class="card-body">
        <div id="smart_contract_transactions"><%= t('loading') %></div>
      </div>
    </div>
  </div>
</div>

<script>

    $( document ).ready(function() {


        var query = new widgets.query(`query ($network: EthereumNetwork!,
                    $address: String!,
                    $limit: Int!,
                    $offset: Int!
                    $from: ISO8601DateTime,
                    $till: ISO8601DateTime){
                ethereum(network: $network){
                  smartContractCalls(options:{desc: "block.timestamp.time", limit: $limit, offset: $offset},
                    date: {since: $from till: $till },
                    smartContractAddress: {is: $address}) {

                    block {
                      timestamp {
                        time (format: "%Y-%m-%d %H:%M:%S")
                      }
                      height
                    }
                    smartContractMethod {
                      name
                      signatureHash
                    }

                    address: caller {
                      address
                      annotation
                    }

                    transaction {
                      hash
                    }
                    gasValue
                    gas_value_usd: gasValue(in: USD)
                    external
                  }
                }
              }`);

        new widgets.table('#smart_contract_transactions', query, 'arbitrum.smartContractCalls', {
            title: '<%= t('widgets.headers.smart_contract_transactions') %>',
            dataOptions: [
                {
                    title: '<%= t('widgets.titles.timestamp') %>',
                    type: 'string',
                    path: 'block.timestamp.time'
                },
                {
                    title: '<%= t('widgets.titles.block') %>',
                    type: 'string',
                    path: 'block.height',
                    urlCallbackName: 'block_path'
                },
                {
                    title: '<%= t('widgets.titles.method') %>',
                    type: 'string',
                    path: ['smartContractMethod.name','smartContractMethod.signatureHash'],
                    urlCallbackName: 'smart_contract_method_path'
                },
                {
                    title: '<%= t('widgets.titles.caller') %>',
                    type: 'string-ellipsis',
                    path: ['address.annotation','address.address'],
                    urlCallbackName: 'address_path'
                },
                {
                    title: '<%= t('widgets.titles.gas_value') %>',
                    type: 'amount',
                    path: 'gasValue'
                },
                {
                    renderCallback: <%= render partial: 'arbitrum/currency_with_amount_usd.text', locals: {currency: '""', amount: 'item.gas_value_usd'} %>
                },
                {
                    title: '<%= t('widgets.titles.transaction') %>',
                    type: 'string-ellipsis',
                    urlCallbackName: 'transaction_path',
                    renderCallback: <%= render partial: 'arbitrum/tx_external_display.text' %>
                },
            ]
        });

        queryWithTimeRange(rr, query, <%= @from.html_safe %>,<%= @till.html_safe %>,{
            network: '<%= params['network']['network'] %>',
            address: '<%= @address %>'
        });


    });

</script>