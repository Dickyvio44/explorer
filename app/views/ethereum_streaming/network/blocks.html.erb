<div class='row'>
  <div class='col-12 col-lg-12 mb-4'>
    <div id='LatestBlocks' class='card'></div>
  </div>
</div>
<script>
    class LatestBlocks extends BootstrapTableComponent {
        configuration() {
            return {
                topElement: response => response.EVM.Blocks,
                chainId: response => response.EVM.Blocks[0].ChainId,
                columns: [
                    {
                        name: 'Timestamp',
                        cell: row => row.Block.Time,
                        rendering: renderDate,
                    },
                    {
                        name: 'Block',
                        cell: row => row.Block.Number,
                        rendering: renderBlockLink, headerStyle: {width: '100px'}
                    },
                    {
                        name: 'Miner',
                        cell: row => row.Block.Coinbase,
                        rendering: renderJustAddressLink, headerStyle: {width: '15%'},
                    },
                    {
                        name: 'Block hash',
                        cell: row => row.Block.Hash,
                        rendering: renderTX, headerStyle: {width: '15%'},
                    },
                    {
                        name: 'Transactions count',
                        cell: row => row.Block.TxCount,
                        rendering: renderNumbers, headerStyle: {textAlign: 'end'},
                    },
                    {
                        name: (response) => `Base fee (${WidgetConfig.getCurrency(response.EVM.Blocks[0].ChainId)})`,
                        cell: row => row.Block.BaseFee,
                        // rendering: renderNumbers, headerStyle: {textAlign: 'end'},
                    },
                    {
                        name: (response) => `Gas used (${WidgetConfig.getCurrency(response.EVM.Blocks[0].ChainId)})`,
                        cell: row => row.Block.GasUsed,
                        rendering: renderNumbers, headerStyle: {textAlign: 'end'},
                    },
                ]
            }
        }
    }

    const variables = {
        network: '<%= @streaming%>',
        till: new Date().toISOString().slice(0, 10),
        from: (new Date((new Date()).setDate((new Date()).getDate() - 1))).toISOString().slice(0, 10)
    }
    renderWithTime(variables, <%= limited_date_range_limit(@from, @till).join(',').html_safe %>, function f(variables) {
        renderComponent('<%=@streaming_access_token %>', [[LatestBlocks, '#LatestBlocks']], 'Latest-Blocks_4', variables, 'Subscription-Latest-Blocks_2')
    });
</script>
