<div class='row'>
  <div class='col-12 col-lg-12 mb-4'>
    <div id='LatestTransactions' class='card'></div>
  </div>
</div>
<div class='row mb-4'>
  <div class='col-12 col-lg-6'>
    <div class='card' id='TransactionsByDate'></div>
  </div>
  <div class='col-12 col-lg-6'>
    <div class='card' id='GasSpentByDate'></div>
  </div>
</div>
<script>

    class LatestTransactions extends BootstrapTableComponent {
        configuration() {
            return {
                topElement: function (response) {
                    return response.EVM.Transactions
                },
                chainId: function (response) {
                    return response.EVM.Transactions[0].ChainId
                },
                columns: [
                    {
                        name: 'Timestamp', cell: function (row) {
                            return row.Block.Time
                        }, rendering: renderDate,
                    },
                    {
                        name: 'Block', cell: function (row) {
                            return row.Block.Number
                        }, rendering: renderBlockLink, headerStyle: {width: '100px'},
                    },
                    {
                        name: 'Sender', cell: function (row) {
                            return row.Transaction.To
                        }, rendering: renderAddressLink,
                    },
                    {
                        name: 'Receiver', cell: function (row) {
                            return row.Transaction.To
                        }, rendering: renderAddressLink,
                    },
                    {
                        name: 'Hash', cell: function (row) {
                            return row.Transaction.Hash
                        }, rendering: renderTX,headerStyle: {width: '100px'},
                    },
                    {
                        name: 'Value', cell: function (row) {
                            return row.Transaction.Value
                        }, rendering: renderNumbers, headerStyle: {textAlign: 'end',width: '100px'},
                    },
                    {
                        name: 'Gas used', cell: function (row) {
                            return row.Receipt.GasUsed
                        }, rendering: renderNumbers, headerStyle: {textAlign: 'end',width: '100px'}
                    },
                    {
                        name: 'Gas price', cell: function (row) {
                            return row.Fee.EffectiveGasPrice
                        }, rendering: renderNumbers, headerStyle: {textAlign: 'end',width: '100px'},
                    },
                    {
                        name: 'Sender fee', cell: function (row) {
                            return row.Fee.SenderFee
                        }, rendering: renderNumbers, headerStyle: {textAlign: 'end',width: '100px'},
                    },
                ]
            }
        }
    }

    class TransactionsByDate extends TimeChartComponent {
        configuration() {
            return {
                topElement: function (response) {
                    return response.EVM.Transactions
                },
                chainId: function (response) {
                    return response.EVM.Transactions[0].ChainId
                },
                columns: [
                    {
                        name: 'Date', cell: function (row) {
                            return row.Block.Date
                        }
                    },
                    {
                        name: 'Count', cell: function (row) {
                            return parseInt(row.count)
                        }
                    }
                ],
                options: {
                    title: 'Transactions Count',
                    height: 300
                }
            }
        }
    }

    class GasSpentByDate extends TimeChartComponent {
        configuration() {
            return {
                topElement: function (response) {
                    return response.EVM.Transactions
                },
                chainId: function (response) {
                    return response.EVM.Transactions[0].ChainId
                },
                columns: [
                    {
                        name: 'Date', cell: function (row) {
                            return row.Block.Date
                        }
                    },
                    {
                        name: 'Gas Cost per day', cell: function (row) {
                            return +row.sum
                        }
                    }
                ],
                options: {
                    title: 'Gas spend',
                    height: 300
                }
            }
        }
    }

    const variables = {
        network: '<%= @streaming%>',
        till: new Date().toISOString().slice(0, 10),
        from: (new Date((new Date()).setDate((new Date()).getDate() - 2))).toISOString().slice(0, 10)
    }

    renderWithTime(variables, <%= limited_date_range_limit(@from, @till).join(',').html_safe %>, function f(variables) {
        renderComponent([[LatestTransactions, '#LatestTransactions']], 'Latest-Transactions_3', variables);
        renderComponent([[TransactionsByDate, '#TransactionsByDate']], 'Transactions-By-Date_3', variables);
        renderComponent([[GasSpentByDate, '#GasSpentByDate']], 'Gas-Spent-By-Date_4', variables);
    })
</script>
