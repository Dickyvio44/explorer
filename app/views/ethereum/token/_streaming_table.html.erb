<% if innovation_in_blockchain? %>
  <div class='row'>
    <div class='col-12 col-lg-12 mb-4'>
      <div class='card'>
        <div id='LatestTransfersOfTokenInNetwork'></div>
      </div>
    </div>
  </div>
  <script>
      
      const tokenName = '<%= @token_info && @token_info.name ? @token_info.name : "-" %>';
      const tokenSymbol = '<%= @token_info && @token_info.symbol ? @token_info.symbol : "-" %>';

      class LatestTransfersOfTokenInNetwork extends BootstrapTableComponent {
          configuration() {
              return {
                  topElement: function (response) {
                      return response.EVM.Transfers
                  },
                  chainId: function (response) {
                      return response.EVM.Transfers[0].ChainId
                  },
                  title: `Latest ${tokenName} (${tokenSymbol}) Token Transfer Stream`,
                  columns: [
                      {
                          name: 'Time', cell: function (row) {
                              return row.Block.Time
                          }, rendering: renderDate,
                      },
                      {
                          name: 'Block', cell: function (row) {
                              return row.Block.Number
                          }, rendering: renderBlockLink, headerStyle: {width: '96px'},
                      },
                      {
                          name: 'Sender', cell: function (row) {
                              return row.Transfer.Sender
                          }, rendering: renderJustAddressLink
                      },
                      {
                          name: '', cell: function (row) {
                              return ''
                          }, rendering: renderSenderRecieverIcon, headerStyle: {width: '50px'},
                      },
                      {
                          name: 'Receiver', cell: function (row) {
                              return row.Transfer.Receiver
                          }, rendering: renderJustAddressLink
                      },
                      {
                          name: 'Currency', cell: function (row) {
                              return {
                                  currency: row.Transfer.Currency.Symbol,
                                  smartContract: row.Transfer.Currency.SmartContract
                              }
                          }, rendering: renderTokenLink,
                      },
                      {
                          name: 'Amount', cell: function (row) {
                              return row.Transfer.Amount
                          }, rendering: renderNumbers, headerStyle: {textAlign: 'end',width: '75px'},
                      },
                      {
                          name: 'Hash',
                          cell: function (row) {
                              return row.Transaction.Hash
                          },
                          rendering: renderTX
                      }
                  ]
              }
          }
      }

      const variables = {
          network: '<%= @streaming%>',
          limit: 20,
          offset: 0,
          token: '<%= @address %>',
      }
      renderComponent('<%=@streaming_access_token %>',[[LatestTransfersOfTokenInNetwork, '#LatestTransfersOfTokenInNetwork']], 'Latest-Transfers-of-Token', variables, 'Subscription-Latest-Transfers-of-Token-in-Network_1');
  </script>
<% end %>
